
graph_lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006e0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000006e0  00000754  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000138c  00000000  00000000  00000754  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000de3  00000000  00000000  00001ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  000028c3  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__ctors_end>
   4:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
   8:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
   c:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  10:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  14:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  18:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  1c:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  20:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  24:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  28:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  2c:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  30:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  34:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  38:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  3c:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  40:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  44:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  48:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  4c:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>
  50:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__bad_interrupt>

00000054 <myString>:
  54:	c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf     ................
  64:	d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df     ................
  74:	e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef     ................
  84:	f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff     ................
	...

00000095 <text>:
  95:	a8 e1 e0 ed e0 ff 20 d5 d3 c9 cd df 3a 20 f2 e5     ...... .....: ..
  a5:	ef e5 f0 fc 20 ed e0 20 f0 f3 f1 f1 ea ee ec 21     .... .. .......!
	...

000000b7 <font5x8>:
  b7:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  c7:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  d7:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  e7:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
  f7:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
 107:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
 117:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
 127:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
 137:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
 147:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
 157:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 167:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 177:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
 187:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 197:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 1a7:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 1b7:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 1c7:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
 1d7:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
 1e7:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
 1f7:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 207:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 217:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
 227:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
 237:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 247:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 257:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 267:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 277:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 287:	00 00 41 36 08 00 08 08 2a 1c 08 08 1c 2a 08 08     ..A6....*....*..
 297:	7e 11 11 11 7e 7f 49 49 49 30 7f 49 49 49 36 7f     ~...~.III0.III6.
 2a7:	01 01 01 01 60 3e 21 3f 60 7f 49 49 49 41 67 18     ....`>!?`.IIIAg.
 2b7:	7f 18 67 22 41 49 49 36 7f 10 08 04 7f 7f 10 09     ..g"AII6........
 2c7:	04 7f 7f 08 14 22 41 40 3e 01 01 7e 7f 02 04 02     ....."A@>..~....
 2d7:	7f 7f 08 08 08 7f 3e 41 41 41 3e 7f 01 01 01 7f     ......>AAA>.....
 2e7:	7f 09 09 09 06 3e 41 41 41 22 01 01 7f 01 01 27     .....>AAA".....'
 2f7:	48 48 48 3f 1e 21 7f 21 1e 63 14 08 14 63 3f 20     HHH?.!.!.c...c? 
 307:	20 3f 40 1f 10 10 10 7f 7f 40 7f 40 7f 3f 20 3f      ?@......@.@.? ?
 317:	20 7f 01 7f 44 44 38 7f 44 7c 00 7f 7f 44 44 44      ...DD8.D|...DDD
 327:	38 22 41 49 49 3e 7f 08 7f 41 7f 46 29 19 09 7f     8"AII>...A.F)...
 337:	20 54 54 54 78 3c 4a 4a 4b 30 7c 54 54 58 20 7c      TTTx<JJK0|TTX |
 347:	04 04 04 04 60 38 24 3c 60 38 54 54 54 18 74 08     ....`8$<`8TTT.t.
 357:	7c 08 74 28 44 54 54 28 7c 20 10 08 7c 7c 21 12     |.t(DTT(| ..||!.
 367:	09 7c 7c 10 10 28 44 40 78 04 04 7c 7c 08 10 08     .||..(D@x..||...
 377:	7c 7c 10 10 10 7c 38 44 44 44 38 7c 04 04 04 7c     ||...|8DDD8|...|
 387:	7c 14 14 14 08 38 44 44 44 28 04 04 7c 04 04 0c     |....8DDD(..|...
 397:	50 50 50 3c 18 24 7c 24 18 44 28 10 28 44 3c 20     PPP<.$|$.D(.(D< 
 3a7:	20 3c 40 1c 20 20 20 7c 7c 40 7c 40 7c 3c 20 3c      <@.   ||@|@|< <
 3b7:	20 7c 04 7c 48 48 30 7c 48 48 30 7c 7c 48 48 48      |.|HH0|HH0||HHH
 3c7:	30 28 44 54 54 38 7c 38 44 44 38 48 34 14 14 7c     0(DTT8|8DD8H4..|
 3d7:	7e 4b 4a 4b 42 38 55 54 55 18 00                    ~KJKB8UTU..

000003e2 <__ctors_end>:
 3e2:	11 24       	eor	r1, r1
 3e4:	1f be       	out	0x3f, r1	; 63
 3e6:	cf e5       	ldi	r28, 0x5F	; 95
 3e8:	d4 e0       	ldi	r29, 0x04	; 4
 3ea:	de bf       	out	0x3e, r29	; 62
 3ec:	cd bf       	out	0x3d, r28	; 61
 3ee:	0e 94 27 03 	call	0x64e	; 0x64e <main>
 3f2:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <_exit>

000003f6 <__bad_interrupt>:
 3f6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003fa <WaitBisyFlag1>:
 const uint8_t PROGMEM myString[] = "ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ";



void WaitBisyFlag1 () {
  uint8_t tmp = DataPort;
 3fa:	85 b3       	in	r24, 0x15	; 21
  DataPort = 0;
 3fc:	15 ba       	out	0x15, r1	; 21
  DDRDataPort = 0x00;
 3fe:	14 ba       	out	0x14, r1	; 20
  Ctrl = (1<<RST) | (0 << RS) |
 400:	94 e7       	ldi	r25, 0x74	; 116
 402:	92 bb       	out	0x12, r25	; 18
  (1 << RW) | (1 << CS1) | (0 << CS2) | (1 << E);
  while (PINDataPort != 0) {
 404:	94 b3       	in	r25, 0x14	; 20
 406:	91 11       	cpse	r25, r1
 408:	fd cf       	rjmp	.-6      	; 0x404 <WaitBisyFlag1+0xa>

  }

  Ctrl = (1<<RST) | (0 << RS) |
 40a:	9c e6       	ldi	r25, 0x6C	; 108
 40c:	92 bb       	out	0x12, r25	; 18
  (1 << RW) | (0 << CS1) | (1 << CS2) | (1 << E);
  while (PINDataPort != 0) {
 40e:	94 b3       	in	r25, 0x14	; 20
 410:	91 11       	cpse	r25, r1
 412:	fd cf       	rjmp	.-6      	; 0x40e <WaitBisyFlag1+0x14>

  }
  Ctrl = (1<<RST) | (0 << RS) |
 414:	94 e0       	ldi	r25, 0x04	; 4
 416:	92 bb       	out	0x12, r25	; 18
	  (0 << RW) | (0 << CS1) | (0 << CS2) | (0 << E);
  DataPort = tmp;
 418:	85 bb       	out	0x15, r24	; 21
  DDRDataPort = 0xFF;
 41a:	8f ef       	ldi	r24, 0xFF	; 255
 41c:	84 bb       	out	0x14, r24	; 20
 41e:	08 95       	ret

00000420 <LCDReset>:
}

// Reset function for LCD, using !RST pin
void LCDReset () {

	Ctrl |= 0 << RST;
 420:	82 b3       	in	r24, 0x12	; 18
 422:	82 bb       	out	0x12, r24	; 18
	WaitBisyFlag1 ();
 424:	0e 94 fd 01 	call	0x3fa	; 0x3fa <WaitBisyFlag1>
	Ctrl |= 1 << RST;
 428:	92 9a       	sbi	0x12, 2	; 18
	WaitBisyFlag1 ();
 42a:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <WaitBisyFlag1>

0000042e <LCDOnOff>:
}

// Function wich enables or disables image on LCD display
void LCDOnOff (unsigned char State)	{
 42e:	cf 93       	push	r28
 430:	df 93       	push	r29
 432:	1f 92       	push	r1
 434:	cd b7       	in	r28, 0x3d	; 61
 436:	de b7       	in	r29, 0x3e	; 62

	WaitBisyFlag1 ();
 438:	89 83       	std	Y+1, r24	; 0x01
 43a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <WaitBisyFlag1>
	Ctrl = (1<<RST) | (0 << RS) |
 43e:	9c e1       	ldi	r25, 0x1C	; 28
 440:	92 bb       	out	0x12, r25	; 18
	(0 << RW) | (1 << CS1) | (1 << CS2) | (0 << E);
	DataPort = (0b11111 << 1) | (State<<0);
 442:	89 81       	ldd	r24, Y+1	; 0x01
 444:	8e 63       	ori	r24, 0x3E	; 62
 446:	85 bb       	out	0x15, r24	; 21
	Ctrl |= (1 << E);
 448:	95 9a       	sbi	0x12, 5	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 44a:	83 e0       	ldi	r24, 0x03	; 3
 44c:	8a 95       	dec	r24
 44e:	f1 f7       	brne	.-4      	; 0x44c <LCDOnOff+0x1e>
 450:	00 00       	nop
	_delay_us (10);
	Ctrl &= ~(1 << E);
 452:	95 98       	cbi	0x12, 5	; 18
	WaitBisyFlag1 ();
}
 454:	0f 90       	pop	r0
 456:	df 91       	pop	r29
 458:	cf 91       	pop	r28
	(0 << RW) | (1 << CS1) | (1 << CS2) | (0 << E);
	DataPort = (0b11111 << 1) | (State<<0);
	Ctrl |= (1 << E);
	_delay_us (10);
	Ctrl &= ~(1 << E);
	WaitBisyFlag1 ();
 45a:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <WaitBisyFlag1>

0000045e <LCDSetPage>:
}



// Function wich sets number of page for LCD
void LCDSetPage (uint8_t Page) {
 45e:	cf 93       	push	r28
 460:	df 93       	push	r29
 462:	1f 92       	push	r1
 464:	cd b7       	in	r28, 0x3d	; 61
 466:	de b7       	in	r29, 0x3e	; 62

// Page value is 3-bit, range checking
	if (Page > 7) {
 468:	88 30       	cpi	r24, 0x08	; 8
 46a:	08 f0       	brcs	.+2      	; 0x46e <__stack+0xf>
		Page &= ~(0b111);
 46c:	88 7f       	andi	r24, 0xF8	; 248
	}

	WaitBisyFlag1 ();
 46e:	89 83       	std	Y+1, r24	; 0x01
 470:	0e 94 fd 01 	call	0x3fa	; 0x3fa <WaitBisyFlag1>
	Ctrl = (1<<RST) | (0 << RS) |
 474:	9c e1       	ldi	r25, 0x1C	; 28
 476:	92 bb       	out	0x12, r25	; 18
	(0 << RW)
	| (1 << CS1) | (1 << CS2) | (0 << E);
	DataPort = (0b10111 << 3) | (Page);
 478:	89 81       	ldd	r24, Y+1	; 0x01
 47a:	88 6b       	ori	r24, 0xB8	; 184
 47c:	85 bb       	out	0x15, r24	; 21
	Ctrl |= (1 << E);
 47e:	95 9a       	sbi	0x12, 5	; 18
 480:	83 e0       	ldi	r24, 0x03	; 3
 482:	8a 95       	dec	r24
 484:	f1 f7       	brne	.-4      	; 0x482 <__stack+0x23>
 486:	00 00       	nop
	_delay_us (10);
	Ctrl &= ~(1 << E);
 488:	95 98       	cbi	0x12, 5	; 18
	WaitBisyFlag1 ();
}
 48a:	0f 90       	pop	r0
 48c:	df 91       	pop	r29
 48e:	cf 91       	pop	r28
	| (1 << CS1) | (1 << CS2) | (0 << E);
	DataPort = (0b10111 << 3) | (Page);
	Ctrl |= (1 << E);
	_delay_us (10);
	Ctrl &= ~(1 << E);
	WaitBisyFlag1 ();
 490:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <WaitBisyFlag1>

00000494 <LCDSetColumn>:
}


void LCDSetColumn (uint8_t Column) {
 494:	cf 93       	push	r28
 496:	df 93       	push	r29
 498:	1f 92       	push	r1
 49a:	cd b7       	in	r28, 0x3d	; 61
 49c:	de b7       	in	r29, 0x3e	; 62

	WaitBisyFlag1 ();
 49e:	89 83       	std	Y+1, r24	; 0x01
 4a0:	0e 94 fd 01 	call	0x3fa	; 0x3fa <WaitBisyFlag1>
	Ctrl = (1<<RST) | (0 << RS) |
 4a4:	9c e1       	ldi	r25, 0x1C	; 28
 4a6:	92 bb       	out	0x12, r25	; 18
	(0 << RW) | (1 << CS1) | (1 << CS2) | (0 << E);
	DataPort = (0b01 << 6) | (Column);
 4a8:	89 81       	ldd	r24, Y+1	; 0x01
 4aa:	80 64       	ori	r24, 0x40	; 64
 4ac:	85 bb       	out	0x15, r24	; 21
	Ctrl |= (1 << E);
 4ae:	95 9a       	sbi	0x12, 5	; 18
 4b0:	83 e0       	ldi	r24, 0x03	; 3
 4b2:	8a 95       	dec	r24
 4b4:	f1 f7       	brne	.-4      	; 0x4b2 <LCDSetColumn+0x1e>
 4b6:	00 00       	nop
	_delay_us (10);
	Ctrl &= ~(1 << E);
 4b8:	95 98       	cbi	0x12, 5	; 18
	WaitBisyFlag1 ();
}
 4ba:	0f 90       	pop	r0
 4bc:	df 91       	pop	r29
 4be:	cf 91       	pop	r28
	(0 << RW) | (1 << CS1) | (1 << CS2) | (0 << E);
	DataPort = (0b01 << 6) | (Column);
	Ctrl |= (1 << E);
	_delay_us (10);
	Ctrl &= ~(1 << E);
	WaitBisyFlag1 ();
 4c0:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <WaitBisyFlag1>

000004c4 <LCDWriteData>:
}

void LCDWriteData (uint8_t Data, uint8_t X, uint8_t Y) {
 4c4:	ff 92       	push	r15
 4c6:	0f 93       	push	r16
 4c8:	1f 93       	push	r17
 4ca:	cf 93       	push	r28
 4cc:	df 93       	push	r29
 4ce:	1f 92       	push	r1
 4d0:	cd b7       	in	r28, 0x3d	; 61
 4d2:	de b7       	in	r29, 0x3e	; 62
 4d4:	18 2f       	mov	r17, r24
	uint8_t cs1mask = 0;
	uint8_t cs2mask = 0;
	if (X > 63 && X < 128) cs2mask = 1;
 4d6:	80 ec       	ldi	r24, 0xC0	; 192
 4d8:	86 0f       	add	r24, r22
 4da:	80 34       	cpi	r24, 0x40	; 64
 4dc:	18 f4       	brcc	.+6      	; 0x4e4 <LCDWriteData+0x20>
 4de:	01 e0       	ldi	r16, 0x01	; 1
	Ctrl &= ~(1 << E);
	WaitBisyFlag1 ();
}

void LCDWriteData (uint8_t Data, uint8_t X, uint8_t Y) {
	uint8_t cs1mask = 0;
 4e0:	f1 2c       	mov	r15, r1
 4e2:	03 c0       	rjmp	.+6      	; 0x4ea <LCDWriteData+0x26>
	uint8_t cs2mask = 0;
 4e4:	00 e0       	ldi	r16, 0x00	; 0
	if (X > 63 && X < 128) cs2mask = 1;
	else  cs1mask = 1;
 4e6:	ff 24       	eor	r15, r15
 4e8:	f3 94       	inc	r15

	LCDSetColumn (X);
 4ea:	86 2f       	mov	r24, r22
 4ec:	49 83       	std	Y+1, r20	; 0x01
 4ee:	0e 94 4a 02 	call	0x494	; 0x494 <LCDSetColumn>
	LCDSetPage (Y);
 4f2:	49 81       	ldd	r20, Y+1	; 0x01
 4f4:	84 2f       	mov	r24, r20
 4f6:	0e 94 2f 02 	call	0x45e	; 0x45e <LCDSetPage>
	WaitBisyFlag1 ();
 4fa:	0e 94 fd 01 	call	0x3fa	; 0x3fa <WaitBisyFlag1>
	Ctrl = (1<<RST) | (1 << RS) |
	(0 << RW) | (0 << E) | (cs1mask <<CS1) | (cs2mask <<CS2);
 4fe:	f2 94       	swap	r15
 500:	80 ef       	ldi	r24, 0xF0	; 240
 502:	f8 22       	and	r15, r24
 504:	90 2f       	mov	r25, r16
 506:	99 0f       	add	r25, r25
 508:	99 0f       	add	r25, r25
 50a:	99 0f       	add	r25, r25
	else  cs1mask = 1;

	LCDSetColumn (X);
	LCDSetPage (Y);
	WaitBisyFlag1 ();
	Ctrl = (1<<RST) | (1 << RS) |
 50c:	9f 29       	or	r25, r15
 50e:	94 68       	ori	r25, 0x84	; 132
 510:	92 bb       	out	0x12, r25	; 18
	(0 << RW) | (0 << E) | (cs1mask <<CS1) | (cs2mask <<CS2);
	DataPort = Data;
 512:	15 bb       	out	0x15, r17	; 21
	Ctrl |= (1 << E);
 514:	95 9a       	sbi	0x12, 5	; 18
 516:	83 e0       	ldi	r24, 0x03	; 3
 518:	8a 95       	dec	r24
 51a:	f1 f7       	brne	.-4      	; 0x518 <LCDWriteData+0x54>
 51c:	00 00       	nop
	_delay_us (10);
	Ctrl &= ~(1 << E);
 51e:	95 98       	cbi	0x12, 5	; 18
	WaitBisyFlag1 ();
}
 520:	0f 90       	pop	r0
 522:	df 91       	pop	r29
 524:	cf 91       	pop	r28
 526:	1f 91       	pop	r17
 528:	0f 91       	pop	r16
 52a:	ff 90       	pop	r15
	(0 << RW) | (0 << E) | (cs1mask <<CS1) | (cs2mask <<CS2);
	DataPort = Data;
	Ctrl |= (1 << E);
	_delay_us (10);
	Ctrl &= ~(1 << E);
	WaitBisyFlag1 ();
 52c:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <WaitBisyFlag1>

00000530 <LCDWriteDataDual>:
}

void LCDWriteDataDual (uint8_t Data) {
 530:	cf 93       	push	r28
 532:	df 93       	push	r29
 534:	1f 92       	push	r1
 536:	cd b7       	in	r28, 0x3d	; 61
 538:	de b7       	in	r29, 0x3e	; 62

	WaitBisyFlag1 ();
 53a:	89 83       	std	Y+1, r24	; 0x01
 53c:	0e 94 fd 01 	call	0x3fa	; 0x3fa <WaitBisyFlag1>
	Ctrl = (1<<RST) | (1 << RS) |
 540:	9c e9       	ldi	r25, 0x9C	; 156
 542:	92 bb       	out	0x12, r25	; 18
	(0 << RW) | (0 << E) | (1<<CS1) | (1 <<CS2);
	DataPort = Data;
 544:	89 81       	ldd	r24, Y+1	; 0x01
 546:	85 bb       	out	0x15, r24	; 21
	Ctrl |= (1 << E);
 548:	95 9a       	sbi	0x12, 5	; 18
 54a:	83 e0       	ldi	r24, 0x03	; 3
 54c:	8a 95       	dec	r24
 54e:	f1 f7       	brne	.-4      	; 0x54c <LCDWriteDataDual+0x1c>
 550:	00 00       	nop
	_delay_us (10);
	Ctrl &= ~(1 << E);
 552:	95 98       	cbi	0x12, 5	; 18
	WaitBisyFlag1 ();
}
 554:	0f 90       	pop	r0
 556:	df 91       	pop	r29
 558:	cf 91       	pop	r28
	(0 << RW) | (0 << E) | (1<<CS1) | (1 <<CS2);
	DataPort = Data;
	Ctrl |= (1 << E);
	_delay_us (10);
	Ctrl &= ~(1 << E);
	WaitBisyFlag1 ();
 55a:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <WaitBisyFlag1>

0000055e <LCDClear>:
}


void LCDClear () {
 55e:	cf 93       	push	r28
 560:	df 93       	push	r29
  LCDOnOff (off);
 562:	80 e0       	ldi	r24, 0x00	; 0
 564:	0e 94 17 02 	call	0x42e	; 0x42e <LCDOnOff>
  for (uint8_t j = 0; j < 8; j++) {
 568:	c0 e0       	ldi	r28, 0x00	; 0
	LCDSetPage (j);
 56a:	8c 2f       	mov	r24, r28
 56c:	0e 94 2f 02 	call	0x45e	; 0x45e <LCDSetPage>
	for (uint8_t i = 0; i < 64; i++) {
 570:	d0 e0       	ldi	r29, 0x00	; 0
      LCDSetColumn (i);
 572:	8d 2f       	mov	r24, r29
 574:	0e 94 4a 02 	call	0x494	; 0x494 <LCDSetColumn>
	  LCDWriteDataDual (0);
 578:	80 e0       	ldi	r24, 0x00	; 0
 57a:	0e 94 98 02 	call	0x530	; 0x530 <LCDWriteDataDual>

void LCDClear () {
  LCDOnOff (off);
  for (uint8_t j = 0; j < 8; j++) {
	LCDSetPage (j);
	for (uint8_t i = 0; i < 64; i++) {
 57e:	df 5f       	subi	r29, 0xFF	; 255
 580:	d0 34       	cpi	r29, 0x40	; 64
 582:	b9 f7       	brne	.-18     	; 0x572 <LCDClear+0x14>
}


void LCDClear () {
  LCDOnOff (off);
  for (uint8_t j = 0; j < 8; j++) {
 584:	cf 5f       	subi	r28, 0xFF	; 255
 586:	c8 30       	cpi	r28, 0x08	; 8
 588:	81 f7       	brne	.-32     	; 0x56a <LCDClear+0xc>
	for (uint8_t i = 0; i < 64; i++) {
      LCDSetColumn (i);
	  LCDWriteDataDual (0);
    }
  }
  LCDOnOff (on);
 58a:	81 e0       	ldi	r24, 0x01	; 1
}
 58c:	df 91       	pop	r29
 58e:	cf 91       	pop	r28
	for (uint8_t i = 0; i < 64; i++) {
      LCDSetColumn (i);
	  LCDWriteDataDual (0);
    }
  }
  LCDOnOff (on);
 590:	0c 94 17 02 	jmp	0x42e	; 0x42e <LCDOnOff>

00000594 <LCDprint>:
}

void LCDprint (const uint8_t *str, uint8_t X, uint8_t Y) {
 594:	af 92       	push	r10
 596:	bf 92       	push	r11
 598:	df 92       	push	r13
 59a:	ef 92       	push	r14
 59c:	ff 92       	push	r15
 59e:	0f 93       	push	r16
 5a0:	1f 93       	push	r17
 5a2:	cf 93       	push	r28
 5a4:	df 93       	push	r29
 5a6:	1f 92       	push	r1
 5a8:	cd b7       	in	r28, 0x3d	; 61
 5aa:	de b7       	in	r29, 0x3e	; 62
 5ac:	8c 01       	movw	r16, r24
 5ae:	96 2f       	mov	r25, r22
 5b0:	d4 2e       	mov	r13, r20

	uint8_t ch = 0;
	uint8_t X_coord = X;
	uint8_t Y_coord = Y;
	uint16_t Fnt_col = 0;
	while ((ch = pgm_read_byte (str)) != 0){
 5b2:	f8 01       	movw	r30, r16
 5b4:	84 91       	lpm	r24, Z
 5b6:	88 23       	and	r24, r24
 5b8:	09 f4       	brne	.+2      	; 0x5bc <LCDprint+0x28>
 5ba:	3e c0       	rjmp	.+124    	; 0x638 <LCDprint+0xa4>

	if (ch == '¨')
 5bc:	88 3a       	cpi	r24, 0xA8	; 168
 5be:	41 f0       	breq	.+16     	; 0x5d0 <LCDprint+0x3c>
	        ch = 0xA0;
	    else if (ch == '¸')
 5c0:	88 3b       	cpi	r24, 0xB8	; 184
 5c2:	41 f0       	breq	.+16     	; 0x5d4 <LCDprint+0x40>
	        ch = 0xA1;
	    else if (ch >= 'À')  //
 5c4:	80 3c       	cpi	r24, 0xC0	; 192
 5c6:	10 f0       	brcs	.+4      	; 0x5cc <LCDprint+0x38>
	        ch -= 0x60;
 5c8:	80 56       	subi	r24, 0x60	; 96
 5ca:	05 c0       	rjmp	.+10     	; 0x5d6 <LCDprint+0x42>
	    else
	        ch -= 0x20;
 5cc:	80 52       	subi	r24, 0x20	; 32
 5ce:	03 c0       	rjmp	.+6      	; 0x5d6 <LCDprint+0x42>
	uint8_t Y_coord = Y;
	uint16_t Fnt_col = 0;
	while ((ch = pgm_read_byte (str)) != 0){

	if (ch == '¨')
	        ch = 0xA0;
 5d0:	80 ea       	ldi	r24, 0xA0	; 160
 5d2:	01 c0       	rjmp	.+2      	; 0x5d6 <LCDprint+0x42>
	    else if (ch == '¸')
	        ch = 0xA1;
 5d4:	81 ea       	ldi	r24, 0xA1	; 161
	    else if (ch >= 'À')  //
	        ch -= 0x60;
	    else
	        ch -= 0x20;

	Fnt_col = ch * 5;
 5d6:	45 e0       	ldi	r20, 0x05	; 5
 5d8:	84 9f       	mul	r24, r20
 5da:	90 01       	movw	r18, r0
 5dc:	11 24       	eor	r1, r1

	if (X_coord > (LCD_X_max - font_width + 1)){
 5de:	9b 37       	cpi	r25, 0x7B	; 123
 5e0:	38 f0       	brcs	.+14     	; 0x5f0 <LCDprint+0x5c>
		if (Y_coord == 7) 	Y_coord = 0;
 5e2:	57 e0       	ldi	r21, 0x07	; 7
 5e4:	d5 16       	cp	r13, r21
 5e6:	11 f0       	breq	.+4      	; 0x5ec <LCDprint+0x58>
			else Y_coord++;
 5e8:	d3 94       	inc	r13
 5ea:	01 c0       	rjmp	.+2      	; 0x5ee <LCDprint+0x5a>
	        ch -= 0x20;

	Fnt_col = ch * 5;

	if (X_coord > (LCD_X_max - font_width + 1)){
		if (Y_coord == 7) 	Y_coord = 0;
 5ec:	d1 2c       	mov	r13, r1
			else Y_coord++;
		X_coord = 0;
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	a1 2c       	mov	r10, r1
 5f2:	b1 2c       	mov	r11, r1
 5f4:	f9 01       	movw	r30, r18
 5f6:	e9 54       	subi	r30, 0x49	; 73
 5f8:	ff 4f       	sbci	r31, 0xFF	; 255
 5fa:	7f 01       	movw	r14, r30
 5fc:	f7 01       	movw	r30, r14
 5fe:	ea 0d       	add	r30, r10
 600:	fb 1d       	adc	r31, r11
	}

	for (uint8_t j = 0; j < 5; j++) {

		LCDWriteData ( pgm_read_byte( &font5x8[Fnt_col++]) , X_coord++, Y_coord);
 602:	84 91       	lpm	r24, Z
 604:	6a 2d       	mov	r22, r10
 606:	69 0f       	add	r22, r25
 608:	4d 2d       	mov	r20, r13
 60a:	99 83       	std	Y+1, r25	; 0x01
 60c:	0e 94 62 02 	call	0x4c4	; 0x4c4 <LCDWriteData>
 610:	ff ef       	ldi	r31, 0xFF	; 255
 612:	af 1a       	sub	r10, r31
 614:	bf 0a       	sbc	r11, r31
		if (Y_coord == 7) 	Y_coord = 0;
			else Y_coord++;
		X_coord = 0;
	}

	for (uint8_t j = 0; j < 5; j++) {
 616:	99 81       	ldd	r25, Y+1	; 0x01
 618:	45 e0       	ldi	r20, 0x05	; 5
 61a:	a4 16       	cp	r10, r20
 61c:	b1 04       	cpc	r11, r1
 61e:	71 f7       	brne	.-36     	; 0x5fc <LCDprint+0x68>

		LCDWriteData ( pgm_read_byte( &font5x8[Fnt_col++]) , X_coord++, Y_coord);

	}

	LCDWriteData (0, X_coord++, Y_coord);
 620:	4d 2d       	mov	r20, r13
 622:	65 e0       	ldi	r22, 0x05	; 5
 624:	69 0f       	add	r22, r25
 626:	9a 5f       	subi	r25, 0xFA	; 250
 628:	80 e0       	ldi	r24, 0x00	; 0
 62a:	99 83       	std	Y+1, r25	; 0x01
 62c:	0e 94 62 02 	call	0x4c4	; 0x4c4 <LCDWriteData>
	str++;
 630:	0f 5f       	subi	r16, 0xFF	; 255
 632:	1f 4f       	sbci	r17, 0xFF	; 255
 634:	99 81       	ldd	r25, Y+1	; 0x01
 636:	bd cf       	rjmp	.-134    	; 0x5b2 <LCDprint+0x1e>
		//X_coord++;
		str++;
	}
*/

}
 638:	0f 90       	pop	r0
 63a:	df 91       	pop	r29
 63c:	cf 91       	pop	r28
 63e:	1f 91       	pop	r17
 640:	0f 91       	pop	r16
 642:	ff 90       	pop	r15
 644:	ef 90       	pop	r14
 646:	df 90       	pop	r13
 648:	bf 90       	pop	r11
 64a:	af 90       	pop	r10
 64c:	08 95       	ret

0000064e <main>:
int main (void) {

//uint8_t tmp = 0;

// Port initialisation
	DataPort = 0;
 64e:	15 ba       	out	0x15, r1	; 21
	Ctrl = 0;
 650:	12 ba       	out	0x12, r1	; 18
	DDRDataPort = 0xFF;
 652:	8f ef       	ldi	r24, 0xFF	; 255
 654:	84 bb       	out	0x14, r24	; 20
	DDRCtrl = 0xFF;
 656:	81 bb       	out	0x11, r24	; 17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 658:	2f e3       	ldi	r18, 0x3F	; 63
 65a:	8d e0       	ldi	r24, 0x0D	; 13
 65c:	93 e0       	ldi	r25, 0x03	; 3
 65e:	21 50       	subi	r18, 0x01	; 1
 660:	80 40       	sbci	r24, 0x00	; 0
 662:	90 40       	sbci	r25, 0x00	; 0
 664:	e1 f7       	brne	.-8      	; 0x65e <main+0x10>
 666:	00 c0       	rjmp	.+0      	; 0x668 <main+0x1a>
 668:	00 00       	nop



// LCD initialisation
	_delay_ms (1000);
	LCDReset ();
 66a:	0e 94 10 02 	call	0x420	; 0x420 <LCDReset>
	LCDOnOff (on);
 66e:	81 e0       	ldi	r24, 0x01	; 1
 670:	0e 94 17 02 	call	0x42e	; 0x42e <LCDOnOff>
	LCDClear ();
 674:	0e 94 af 02 	call	0x55e	; 0x55e <LCDClear>

	LCDprint (text, 0, 0);
 678:	40 e0       	ldi	r20, 0x00	; 0
 67a:	60 e0       	ldi	r22, 0x00	; 0
 67c:	85 e9       	ldi	r24, 0x95	; 149
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	0e 94 ca 02 	call	0x594	; 0x594 <LCDprint>
 684:	2f e3       	ldi	r18, 0x3F	; 63
 686:	8d e0       	ldi	r24, 0x0D	; 13
 688:	93 e0       	ldi	r25, 0x03	; 3
 68a:	21 50       	subi	r18, 0x01	; 1
 68c:	80 40       	sbci	r24, 0x00	; 0
 68e:	90 40       	sbci	r25, 0x00	; 0
 690:	e1 f7       	brne	.-8      	; 0x68a <main+0x3c>
 692:	00 c0       	rjmp	.+0      	; 0x694 <main+0x46>
 694:	00 00       	nop
		_delay_ms (1000);
	LCDprint (myString, 0, 2);
 696:	42 e0       	ldi	r20, 0x02	; 2
 698:	60 e0       	ldi	r22, 0x00	; 0
 69a:	84 e5       	ldi	r24, 0x54	; 84
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	0e 94 ca 02 	call	0x594	; 0x594 <LCDprint>
		}*/



	while (1) {
      LCDWriteData (0, 0, 7);
 6a2:	47 e0       	ldi	r20, 0x07	; 7
 6a4:	60 e0       	ldi	r22, 0x00	; 0
 6a6:	80 e0       	ldi	r24, 0x00	; 0
 6a8:	0e 94 62 02 	call	0x4c4	; 0x4c4 <LCDWriteData>
 6ac:	2f e9       	ldi	r18, 0x9F	; 159
 6ae:	86 e8       	ldi	r24, 0x86	; 134
 6b0:	91 e0       	ldi	r25, 0x01	; 1
 6b2:	21 50       	subi	r18, 0x01	; 1
 6b4:	80 40       	sbci	r24, 0x00	; 0
 6b6:	90 40       	sbci	r25, 0x00	; 0
 6b8:	e1 f7       	brne	.-8      	; 0x6b2 <main+0x64>
 6ba:	00 c0       	rjmp	.+0      	; 0x6bc <main+0x6e>
 6bc:	00 00       	nop
	  _delay_ms (500);
      LCDWriteData (127, 0, 7);
 6be:	47 e0       	ldi	r20, 0x07	; 7
 6c0:	60 e0       	ldi	r22, 0x00	; 0
 6c2:	8f e7       	ldi	r24, 0x7F	; 127
 6c4:	0e 94 62 02 	call	0x4c4	; 0x4c4 <LCDWriteData>
 6c8:	2f e9       	ldi	r18, 0x9F	; 159
 6ca:	86 e8       	ldi	r24, 0x86	; 134
 6cc:	91 e0       	ldi	r25, 0x01	; 1
 6ce:	21 50       	subi	r18, 0x01	; 1
 6d0:	80 40       	sbci	r24, 0x00	; 0
 6d2:	90 40       	sbci	r25, 0x00	; 0
 6d4:	e1 f7       	brne	.-8      	; 0x6ce <main+0x80>
 6d6:	00 c0       	rjmp	.+0      	; 0x6d8 <main+0x8a>
 6d8:	00 00       	nop
 6da:	e3 cf       	rjmp	.-58     	; 0x6a2 <main+0x54>

000006dc <_exit>:
 6dc:	f8 94       	cli

000006de <__stop_program>:
 6de:	ff cf       	rjmp	.-2      	; 0x6de <__stop_program>
